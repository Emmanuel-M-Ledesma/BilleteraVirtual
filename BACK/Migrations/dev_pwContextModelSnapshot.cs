// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PILpw.Entitis;

namespace PILpw.Migrations
{
    [DbContext(typeof(dev_pwContext))]
    partial class dev_pwContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Modern_Spanish_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PILpw.Entitis.Contacto", b =>
                {
                    b.Property<int>("IdContacto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_contacto")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    b.Property<int?>("IdUsuarioAgendado")
                        .HasColumnType("int")
                        .HasColumnName("id_usuario_agendado");

                    b.HasKey("IdContacto");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Contactos");
                });

            modelBuilder.Entity("PILpw.Entitis.Cuenta", b =>
                {
                    b.Property<int>("IdCuenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_cuenta")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("alias");

                    b.Property<string>("Cvu")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CVU");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    b.Property<decimal>("Saldo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("saldo");

                    b.Property<string>("TipoCuenta")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tipo_cuenta");

                    b.HasKey("IdCuenta");

                    b.ToTable("Cuentas");
                });

            modelBuilder.Entity("PILpw.Entitis.Operacione", b =>
                {
                    b.Property<int>("IdOperacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_operacion")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Destinatario")
                        .HasColumnType("int")
                        .HasColumnName("destinatario");

                    b.Property<string>("FechaOperacion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fecha_operacion");

                    b.Property<int?>("IdCuenta")
                        .HasColumnType("int")
                        .HasColumnName("id_cuenta");

                    b.Property<int?>("IdTipoOperacion")
                        .HasColumnType("int")
                        .HasColumnName("id_tipo_operacion");

                    b.Property<decimal>("Monto")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("monto");

                    b.HasKey("IdOperacion");

                    b.HasIndex("IdCuenta");

                    b.HasIndex("IdTipoOperacion")
                        .IsUnique()
                        .HasFilter("[id_tipo_operacion] IS NOT NULL");

                    b.ToTable("Operaciones");
                });

            modelBuilder.Entity("PILpw.Entitis.TipoOperacion", b =>
                {
                    b.Property<int>("IdTipoOperacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_tipo_operacion")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NombreOperacion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre_operacion");

                    b.HasKey("IdTipoOperacion");

                    b.ToTable("Tipo_operacion");
                });

            modelBuilder.Entity("PILpw.Entitis.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_usuario")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apelldio")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("apelldio");

                    b.Property<string>("Calle")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("calle");

                    b.Property<string>("Ciudad")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ciudad");

                    b.Property<int?>("Dni")
                        .HasColumnType("int")
                        .HasColumnName("dni");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.Property<string>("NombreUsuario")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre_usuario");

                    b.Property<string>("Pais")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("pais");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("password");

                    b.Property<string>("Provincia")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("provincia");

                    b.Property<string>("Telefono")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("telefono");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("PILpw.Entitis.Contacto", b =>
                {
                    b.HasOne("PILpw.Entitis.Usuario", "IdUsuarioNavigation")
                        .WithMany("Contactos")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK_Contactos_Usuario");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("PILpw.Entitis.Operacione", b =>
                {
                    b.HasOne("PILpw.Entitis.Cuenta", "IdCuentaNavigation")
                        .WithMany("Operaciones")
                        .HasForeignKey("IdCuenta")
                        .HasConstraintName("FK_Operaciones_Cuentas");

                    b.HasOne("PILpw.Entitis.TipoOperacion", "IdOperacionNavigation")
                        .WithOne("Operacione")
                        .HasForeignKey("PILpw.Entitis.Operacione", "IdTipoOperacion")
                        .HasConstraintName("FK_Operaciones_Tipo_operacion");

                    b.Navigation("IdCuentaNavigation");

                    b.Navigation("IdOperacionNavigation");
                });

            modelBuilder.Entity("PILpw.Entitis.Cuenta", b =>
                {
                    b.Navigation("Operaciones");
                });

            modelBuilder.Entity("PILpw.Entitis.TipoOperacion", b =>
                {
                    b.Navigation("Operacione");
                });

            modelBuilder.Entity("PILpw.Entitis.Usuario", b =>
                {
                    b.Navigation("Contactos");
                });
#pragma warning restore 612, 618
        }
    }
}
